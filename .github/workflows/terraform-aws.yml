name: Terraform AWS CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "**"

jobs:
  terraform-apply:
    if: contains(github.event.head_commit.message, 'apply')
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    defaults:
      run:
        working-directory: Terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: 복원 .pem 파일 (base64 없이 직접 저장된 평문 사용)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY_PLAIN }}" > ~/.ssh/key1.pem
          chmod 600 ~/.ssh/key1.pem

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          PRIVATE_KEY=$(cat ~/.ssh/key1.pem)
          terraform plan \
            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="private_key_raw=$PRIVATE_KEY" \
            -var-file="terraform.tfvars"

      - name: Terraform Apply
        run: |
          PRIVATE_KEY=$(cat ~/.ssh/key1.pem)
          terraform apply -auto-approve \
            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="private_key_raw=$PRIVATE_KEY" \
            -var-file="terraform.tfvars"

  terraform-destroy:
    if: contains(github.event.head_commit.message, 'destroy')
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    defaults:
      run:
        working-directory: Terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: 복원 .pem 파일 (base64 없이 직접 저장된 평문 사용)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY_PLAIN }}" > ~/.ssh/key1.pem
          chmod 600 ~/.ssh/key1.pem

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: |
          PRIVATE_KEY=$(cat ~/.ssh/key1.pem)
          terraform destroy -auto-approve \
            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="private_key_raw=$PRIVATE_KEY" \
            -var-file="terraform.tfvars"

  no-action:
    if: "!contains(github.event.head_commit.message, 'apply') && !contains(github.event.head_commit.message, 'destroy')"
    runs-on: ubuntu-latest
    steps:
      - name: No action matched
        run: echo "No 'apply' or 'destroy' keyword in commit message. Skipping infrastructure change."
